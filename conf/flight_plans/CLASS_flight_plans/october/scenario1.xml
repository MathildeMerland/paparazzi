<!DOCTYPE flight_plan SYSTEM "../../flight_plan.dtd">

<flight_plan alt="223" ground_alt="103" lat0="52.5037920" lon0="-0.5979750" max_dist_from_home="1000" name="Basic" qfu="30" security_height="25">
  <header>
#include "subsystems/datalink/datalink.h"
#include "stdio.h"
static inline bool wp_qdr_aligned(uint8_t wp1, uint8_t wp2) {
  float dx = WaypointX(wp2) - WaypointX(wp1);
  float dy = WaypointY(wp2) - WaypointY(wp1);
  float qdr = atan2(dy, dx);
  float nav_qdr = nav_circle_trigo_qdr;
  
  if(LessThan(0, nav_circle_radius)) {
    nav_qdr = nav_qdr - M_PI/2;
    //printf("+ ");
  }
  else {
    nav_qdr = nav_qdr + M_PI/2;
    //printf("- ");
  }
  while LessThan(M_PI, nav_qdr) nav_qdr -= 2 * M_PI;
  while LessThan(nav_qdr, -M_PI) nav_qdr += 2 * M_PI;
  
  float _diff = nav_qdr - qdr;
  while LessThan(M_PI, _diff) _diff -= 2 * M_PI;
  while LessThan(_diff, -M_PI) _diff += 2 * M_PI;
  
  bool close = LessThan(fabsf(_diff),0.177);
  
  //printf("waypoint: %f, nav:%f, diff=%f, close:%d\n", qdr, nav_qdr, _diff, close);
  return close;  
};

</header>
  <waypoints>
    <waypoint lat="52.5037920" lon="-0.5979750" name="HOME"/>
    <waypoint alt="223.0" lat="52.503290" lon="-0.598423" name="STDBY"/>
    <waypoint alt="215.0" name="AF" x="137.2" y="55.9"/>
    <waypoint alt="185.0" name="TD" x="78.4" y="-8.5"/>
    <waypoint name="_BASELEG" x="79.5" y="116.7"/>
    <waypoint name="CLIMB" x="118.0" y="107.6"/>
    <waypoint alt="223.0" lat="52.5106722" lon="-0.5867972" name="GK"/>
    <waypoint alt="223.0" name="wp1" x="29.7" y="-416.4"/>
    <waypoint alt="223.0" name="wp2" x="350.7" y="127.2"/>
    <waypoint alt="223.0" name="wp3" x="-186.1" y="143.7"/>
    <waypoint alt="223.0" name="wp4" x="-180.0" y="-93.3"/>
    <waypoint alt="223.0" name="wp5" x="35.1" y="300.3"/>
    <waypoint alt="223.0" name="wp6" x="-6.2" y="-104.8"/>
    <waypoint name="csm" x="7.2" y="-170.3" alt="128.0"/>
  </waypoints>
  <blocks>
    <block name="Wait GPS">
      <set value="1" var="autopilot.kill_throttle"/>
      <while cond="!GpsFixValid()"/>
    </block>
    <block name="Geo init">
      <while cond="LessThan(NavBlockTime(), 10)"/>
      <call_once fun="NavSetGroundReferenceHere()"/>
    </block>
    <block name="Holding point">
      <set value="1" var="autopilot.kill_throttle"/>
      <attitude roll="0" throttle="0" vmode="throttle"/>
    </block>
    <block group="home" key="t" name="Takeoff" strip_button="Takeoff (wp CLIMB)" strip_icon="takeoff.png">
      <exception cond="GetPosAlt() > GetAltRef()+25" deroute="csm"/>
      <set value="0" var="autopilot.kill_throttle"/>
      <set value="0" var="autopilot.flight_time"/>
      <go from="HOME" pitch="15" throttle="1.0" vmode="throttle" wp="CLIMB"/>
    </block>
    <block group="csm" name="csm" strip_button="SimTrack" strip_icon="path.png">
      <circle alt="GetAltRef()+40" radius="50" until="NavCircleCount() > 1" wp="csm" vmode="alt"/>
      <circle alt="238" radius="50" until="And(NavCircleCount() > 1, wp_qdr_aligned(WP_csm, WP_wp4))" wp="csm" vmode="alt"/>
    </block>
    <block group="track1" name="track1" strip_button="SimTrack" strip_icon="path.png">
      <go wp="wp4"/>
      <go wp="wp1"/>
      <go wp="wp2"/>
      <circle radius="-100" wp="wp3" until="And(NavCircleCount() > -1, wp_qdr_aligned(WP_wp3,WP_wp5))" />
    </block>
    <block group="track2" name="track2" strip_button="SimTrack" strip_icon="path.png">
      <circle radius="-100" wp="wp5" until="And(NavCircleCount() > -1, wp_qdr_aligned(WP_wp5,WP_csm))"/>
    </block>
    
    <block group="csm" name="wait" strip_button="Wait">
      <circle alt="GetAltRef()+40" radius="50" wp="csm" vmode="alt"/>
    </block>
    <block group="land" name="Land Right AF-TD" strip_button="Land right (wp AF-TD)" strip_icon="land-right.png">
      <set value="DEFAULT_CIRCLE_RADIUS" var="nav_radius"/>
      <deroute block="land"/>
    </block>
    <block group="land" name="Land Left AF-TD" strip_button="Land left (wp AF-TD)" strip_icon="land-left.png">
      <set value="-DEFAULT_CIRCLE_RADIUS" var="nav_radius"/>
      <deroute block="land"/>
    </block>
    <block name="land">
      <call_once fun="nav_compute_baseleg(WP_AF, WP_TD, WP__BASELEG, nav_radius)"/>
      <circle radius="nav_radius" until="NavCircleCount() > 0.5" wp="_BASELEG"/>
      <circle radius="nav_radius" until="And(NavQdrCloseTo(DegOfRad(baseleg_out_qdr)-(nav_radius/fabs(nav_radius))*10), 10 > fabs(GetPosAlt() - WaypointAlt(WP__BASELEG)))" wp="_BASELEG"/>
    </block>
    <block name="final">
      <exception cond="GetAltRef() + 10 > GetPosAlt()" deroute="flare"/>
      <go from="AF" hmode="route" vmode="glide" wp="TD"/>
    </block>
    <block name="flare">
      <go approaching_time="0" from="AF" hmode="route" throttle="0.0" vmode="throttle" wp="TD"/>
      <attitude roll="0.0" throttle="0.0" until="FALSE" vmode="throttle"/>
    </block>
  </blocks>
</flight_plan>
